apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: fp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: 223939953627.dkr.ecr.us-east-1.amazonaws.com/app-repo:latest
        ports:
        - containerPort: 81
        env:
        - name: IMAGE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: IMAGE_URL
        - name: APP_COLOR
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: APP_COLOR
        - name: APP_HEADER_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: APP_HEADER_NAME
        - name: APP_HEADER_SLOGAN
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: APP_HEADER_SLOGAN
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_SESSION_TOKEN
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: AWS_SESSION_TOKEN
        - name: DBHOST
          value: mysql
        - name: DBUSER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DBUSER
        - name: DBPWD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DBPWD
        - name: DATABASE
          value: employees
        - name: DBPORT
          value: "3306"
---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: fp
spec:
  selector:
    app: flask-app
  ports:
  - protocol: TCP
    port: 81
    targetPort: 81
  type: LoadBalancer
